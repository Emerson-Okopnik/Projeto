---
- hosts: frontend
  become: yes
  vars:
    repo_url: "https://github.com/Emerson-Okopnik/Projeto.git"
  tasks:
    - name: Install Node.js and git
      apt:
        name:
          - nodejs
          - npm
          - git
        state: present
        update_cache: yes

    - name: Clone full repository
      git:
        repo: "{{ repo_url }}"
        dest: /home/ubuntu/temp-repo
        version: main
        force: yes
        accept_hostkey: yes
      become_user: ubuntu

    - name: Move front-end folder to app
      shell: mv /home/ubuntu/temp-repo/front-end /home/ubuntu/app
      become_user: ubuntu

    - name: Install frontend dependencies
      npm:
        path: /home/ubuntu/app
        production: false
      become_user: ubuntu

    - name: Run frontend
      shell: |
        npm run dev -- --host 0.0.0.0 --port {{ frontend_port | default(8000) }} &
      args:
        chdir: /home/ubuntu/app
      async: 0
      poll: 0
      become_user: ubuntu

- hosts: backend
  become: yes
  vars:
    repo_url: "https://github.com/Emerson-Okopnik/Projeto.git"
  tasks:
    - name: Add PHP 8.2 repository
      apt_repository:
        repo: ppa:ondrej/php
        state: present
        update_cache: yes

    - name: Install PHP 8.2 and dependencies
      apt:
        name:
          - php8.2
          - php8.2-cli
          - php8.2-common
          - php8.2-mbstring
          - php8.2-xml
          - php8.2-curl
          - php8.2-bcmath
          - php8.2-mysql
          - php8.2-readline
          - php8.2-zip
          - unzip
          - git
          - curl
        state: present

    - name: Install Composer
      shell: |
        curl -sS https://getcomposer.org/installer -o composer-setup.php
        php composer-setup.php --install-dir=/usr/local/bin --filename=composer
      args:
        creates: /usr/local/bin/composer

    - name: Clone full repository
      git:
        repo: "{{ repo_url }}"
        dest: /home/ubuntu/temp-repo
        version: main
        force: yes
        accept_hostkey: yes
      become_user: ubuntu

    - name: Copy back-end folder to app
      shell: |
        rm -rf /home/ubuntu/app
        cp -r /home/ubuntu/temp-repo/back-end /home/ubuntu/app
      become_user: ubuntu

    - name: Install backend dependencies
      composer:
        command: install
        working_dir: /home/ubuntu/app
        ignore_platform_reqs: true
      become_user: ubuntu

    - name: Run backend
      shell: |
        php artisan serve --host 0.0.0.0 --port {{ api_port | default(8000) }} &
      args:
        chdir: /home/ubuntu/app
      async: 0
      poll: 0
      become_user: ubuntu
